name: ci

on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor:
            latest=false
          images: |
            ghcr.io/${{ github.repository }}
          labels: |
            org.opencontainers.image.description=${{ github.event.repository.description }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          file: docker/Dockerfile
          load: ${{ github.event_name == 'pull_request' }}
          platforms: ${{ github.event_name != 'pull_request' && 'linux/amd64,linux/arm64' || '' }}
          provenance: false
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          exit-code: 1
          format: template
          image-ref: ${{ steps.meta.outputs.tags }}
          ignore-unfixed: true
          output: trivy.html
          template: "@/contrib/html.tpl"
      - if: success() || failure()
        continue-on-error: true
        name: Output Trivy results to step summary
        run: |
          # Clean html tags not used in GitHub markdown
          [ -s trivy.html ] && \
            sed -e '/<script>/,/<\/script>/d' \
                -e '/<style>/,/<\/style>/d' \
                -e '/<title>/d' \
                trivy.html >> $GITHUB_STEP_SUMMARY
      - if: github.ref_type == 'tag'
        name: Create release
        env:
          GITHUB_TOKEN: ${{ github.token }}
          TAG: ${{ github.ref_name }}"
        run: |
           gh release create "$TAG" --generate-notes
